{"version":3,"sources":["components/afterLogin/previousValues.js","components/afterLogin/homePage.js","components/beforeLogin/signUpPage.js","components/beforeLogin/logInPage.js","App.js","reportWebVitals.js","index.js"],"names":["PriviousValue","useState","fetchedData","setFetchedData","start_datetime","setStart_datetime","end_datetime","setEnd_datetime","getDataFromDB","axios","get","then","response","fetchedOrders","key","data","user_id","localStorage","getItem","push","id","filterHandaler","catch","error","console","log","fetchedOrder","dateStart","Date","dateEnd","filterdValues","map","d","date","timestamp","useEffect","className","style","width","fontWeight","type","placeholder","onChange","e","target","value","onClick","color","input_values","HomePage","inputValue","setInputValue","searchValue","setSearchValue","showSearchPage","setShowSearchPage","msg","setMsg","result","setResult","sortInputValue","sortedData","sort","a","b","post","toString","moment","format","setDataToDB","join","split","Instructions","pageData","splitInputValue","found","find","v","undefined","searchData","clear","window","location","reload","backgroundColor","borderColor","setShowLoginPage","email","setEmail","password","setPassword","reTypePassword","setReTypePassword","authData","returnSecureToken","setItem","localId","idToken","message","singup","showLoginPage","logIn","handleKeyDown","onKeyDown","App","verified","setVerified","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAoIeA,EA9HK,WAGhB,MAAmCC,mBAAS,CAAC,KAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAyCF,mBAAS,uBAAlD,mBAAOG,EAAP,KAAsBC,EAAtB,KACA,EAAqCJ,mBAAS,wBAA9C,mBAAOK,EAAP,KAAoBC,EAApB,KAGMC,EAAc,WAEhBC,IAAMC,IAAI,8FACLC,MAAK,SAAAC,GAGF,IAAMC,EAAgB,GACtB,IAAK,IAAIC,KAAOF,EAASG,KACjBH,EAASG,KAAKD,GAAKE,SAAWC,aAAaC,QAAQ,WACnDL,EAAcM,KAAd,2BACOP,EAASG,KAAKD,IADrB,IAGIM,GAAIN,KAOhBO,EAAeR,MAKlBS,OACG,SAAAC,GACIC,QAAQC,IAAIF,OAKtBF,EAAe,SAACK,GAKlB,IAAIC,EAAY,IAAIC,KAAKxB,GACrByB,EAAU,IAAID,KAAKtB,GACjBwB,EAAgB,GAGtBJ,EAAaK,KAAI,SAAAC,GACb,IAAIC,EAAQ,IAAIL,KAAKI,EAAEE,WAIpBD,GAAMN,GAAaM,GAAMJ,GACxBC,EAAcX,KAAKa,MAO3B7B,EAAe2B,IAWrB,OANEK,qBAAU,WACN3B,MACF,IAKF,sBAAK4B,UAAU,MAAf,UAEI,uBACA,4EACA,uBACc,IAAblC,EAEG,gCACI,wBAAQmC,MAAO,CAACC,MAAM,QAAQC,WAAW,QAAzC,UACI,+BACI,gDACA,6BAAI,uBAAOC,KAAK,OAAOC,YAAY,iBAAiBC,SAAU,SAAAC,GAAC,OAAEtC,EAAkBsC,EAAEC,OAAOC,eAGhG,+BACI,8CACA,6BAAI,uBAAOL,KAAK,OAAOC,YAAY,eAAeC,SAAU,SAAAC,GAAC,OAAEpC,EAAgBoC,EAAEC,OAAOC,kBAGhG,uBACA,wBAAQC,QAAS,kBAAItC,KAAiB6B,MAAO,CAACC,MAAM,SAApD,oBACA,uBACA,uBACA,uBAEA,qBAAKD,MAAO,CAACU,MAAM,QAAnB,qGACA,uBAEA,kCACI,+BACI,8CACA,8CAEH7C,EAAY6B,KAAI,SAAAC,GAGb,OACI,+BACI,6BAAKA,EAAEgB,eACP,6BAAKhB,EAAEE,cAFFF,EAAEZ,aAS9B,+FC0DM6B,EAhLA,WAEX,MAAiChD,mBAAS,IAA1C,mBAAOiD,EAAP,KAAkBC,EAAlB,KACA,EAAmClD,mBAAS,IAA5C,mBAAOmD,EAAP,KAAmBC,EAAnB,KACA,EAAyCpD,oBAAS,GAAlD,mBAAOqD,EAAP,KAAsBC,EAAtB,KACA,EAAmBtD,mBAAS,IAA5B,mBAAOuD,EAAP,KAAWC,EAAX,KACA,EAAyBxD,mBAAS,IAAlC,mBAAOyD,EAAP,KAAcC,EAAd,KA2DMC,EAAe,SAAC7C,GAGlB,IAAI8C,EAAY9C,EAAK+C,MAAK,SAACC,EAAEC,GAAH,OAASA,EAAID,MA3DzB,SAACF,GAKA,IAAZA,EAECpD,IAAMwD,KAAK,6FAA6F,CACpGjB,aAAaa,EAAWK,WACxBhC,UAAUiC,MAASC,OAAO,uBAC1BpD,QAAQC,aAAaC,QAAQ,YAEhCP,MAAK,SAAAC,GACFY,QAAQC,IAAIb,EAASG,KAAM,YAE9BO,OACG,SAAAC,GACIC,QAAQC,IAAIF,OAIpBkC,EAAO,6CACPE,EAAU,KAuCdU,CAAYR,EAAWS,KAAK,IAAIC,MAAM,KAKtC/C,QAAQC,IAAIoC,EAAY,gBAU5B1B,qBAAU,WAENsB,EAAO,IACPE,EAAU,IACVnC,QAAQC,IAAI,eACd,IAIF,IAAI+C,EACI,sBAAKpC,UAAU,eAAf,UACI,+CACA,wGAEI,uBAFJ,oEAKQ,uBALR,oCAOQ,uBAPR,mCASI,uBATJ,4FAWI,uBAXJ,uDAaI,uBAbJ,2HAoBRqC,EAAW,GAsCf,OAhCIA,EAHDnB,EAGW,gCACE,sDACA,wBAAOjB,MAAO,CAACE,WAAW,OAAOD,MAAM,OAAvC,UACI,+BACI,gDACA,+BAAI,uBAAOI,SAAU,SAAAC,GAAC,OAAEQ,EAAcR,EAAEC,OAAOC,QAASA,MAAOK,IAA/D,UAGJ,+BACI,iDACA,+BAAI,uBAAOR,SAAU,SAAAC,GAAC,OAAEU,EAAeV,EAAEC,OAAOC,QAAQL,KAAK,SAASK,MAAOO,IAA7E,UAEJ,+BACI,qBAAIf,MAAO,CAACU,MAAM,WAAlB,UAA+BS,EAA/B,OACA,6BAAI,wBAAQV,QAAS,kBArG5B,WAMb,GAJAtB,QAAQC,IAAIyB,EAAW,eACvB1B,QAAQC,IAAI2B,EAAY,WAGT,IAAZF,EAAe,CACdO,EAAO,6BACP,IAAIiB,EAAiBxB,EAAWqB,MAAM,sBAGhCI,EAAQD,EAAgBE,MAAK,SAAAC,GAAC,OAAIA,GAAKzB,KAG5BO,OAAVmB,GAAPH,EAA2B,OAAkB,SAE7CnD,QAAQC,IAAIkD,EAAM,UAElBf,EAAec,QAIfjB,EAAO,4CACPE,EAAU,IA8E+BoB,IAArB,uBAER,+BACI,yCACA,oBAAI1C,MAAO,CAACU,MAAc,SAARW,EAAgB,MAAM,QAAQnB,WAAW,QAA3D,SAAqEmB,UAI5Ec,KAMH,cAAC,EAAD,IAKV,sBAAKpC,UAAU,MAAf,UAEI,0CAAanB,aAAaC,QAAQ,YAClC,uBAEA,wBAAQ4B,QAAS,kBAAIS,GAAkB,IAAvC,yBACA,wBAAQT,QAAS,kBAAIS,GAAkB,IAAvC,6BACA,wBAAQT,QAAS,kBAnFrB7B,aAAa+D,aACbC,OAAOC,SAASC,UAkFmB9C,MAAO,CAAC+C,gBAAgB,MAAMC,YAAY,OAAzE,oBAEA,uBAECZ,MCxFEzE,EAhFK,SAAC,GAAuB,IAAtBsF,EAAqB,EAArBA,iBAElB,EAAuBrF,mBAAS,IAAhC,mBAAOsF,EAAP,KAAaC,EAAb,KACA,EAA6BvF,mBAAS,IAAtC,mBAAOwF,EAAP,KAAgBC,EAAhB,KACA,EAAyCzF,mBAAS,IAAlD,mBAAO0F,EAAP,KAAsBC,EAAtB,KACA,EAAmB3F,mBAAS,IAA5B,mBAAOuD,EAAP,KAAWC,EAAX,KA2CF,OACE,sBAAKrB,UAAU,MAAf,UACI,6CAEA,wBAAOC,MAAO,CAACC,MAAO,SAAtB,UAEI,+BACI,uCACA,6BAAI,uBAAOG,YAAY,kBAAkBD,KAAK,QAAQE,SAAU,SAAAC,GAAC,OAAE6C,EAAS7C,EAAEC,OAAOC,eAEzF,+BACI,0CACA,6BAAI,uBAAOJ,YAAY,wBAAwBD,KAAK,WAAWE,SAAU,SAAAC,GAAC,OAAE+C,EAAY/C,EAAEC,OAAOC,eAErG,+BACI,kDACA,6BAAI,uBAAOJ,YAAY,wBAAwBD,KAAK,WAAWE,SAAU,SAAAC,GAAC,OAAEiD,EAAkBjD,EAAEC,OAAOC,kBAG/G,uBACA,qBAAKR,MAAO,CAACU,MAAM,MAAMR,WAAW,QAApC,SAA8CiB,IAC9C,uBACA,wBAAQnB,MAAO,CAACC,MAAO,SAAUQ,QAAS,kBA7DjC,WAET,GAAG6C,GAAgBF,EAAS,CAExBhC,EAAO,IACP,IAAMoC,EAAU,CACZN,MAAOA,EACPE,SAAUA,EACVK,mBAAkB,GAItBrF,IAAMwD,KAfI,wGAeW4B,GAChBlF,MAAK,SAAAC,GACF6C,EAAO,IACPjC,QAAQC,IAAIb,EAASG,KAAM,SAC3BE,aAAa8E,QAAQ,SAASnF,EAASG,KAAKiF,SAC5C/E,aAAa8E,QAAQ,QAAQnF,EAASG,KAAKwE,OAC3CtE,aAAa8E,QAAQ,UAAUnF,EAASG,KAAKkF,SAC7ChF,aAAa8E,QAAQ,gBAAe,GACpCd,OAAOC,SAASC,YAGnB7D,OACG,SAAAC,GACIC,QAAQC,IAAIF,EAAMX,SAASG,KAAKQ,OAChCkC,EAAO,YAAYlC,EAAMX,SAASG,KAAKQ,MAAM2E,iBAKzDzC,EAAO,gDA8BmC0C,IAA9C,oBACA,uBAAK,uBAIL,wBAAQ9D,MAAO,CAACC,MAAO,SAAUQ,QAAS,kBAAIwC,GAAiB,IAA/D,6BCeOtF,EA1FK,WAEhB,MAAuBC,mBAAS,IAAhC,mBAAOsF,EAAP,KAAaC,EAAb,KACA,EAA6BvF,mBAAS,IAAtC,mBAAOwF,EAAP,KAAgBC,EAAhB,KACA,EAAuCzF,oBAAS,GAAhD,mBAAOmG,EAAP,KAAqBd,EAArB,KAGA,EAAmBrF,mBAAS,IAA5B,mBAAOuD,EAAP,KAAWC,EAAX,KAGM4C,EAAM,WACR,IAAMR,EAAU,CACZN,MAAOA,EACPE,SAAUA,EACVK,mBAAkB,GAGtBrF,IAAMwD,KAZM,oHAYO4B,GACdlF,MAAK,SAAAC,GACF6C,EAAO,IACPjC,QAAQC,IAAIb,EAASG,KAAM,SAC3BE,aAAa8E,QAAQ,SAASnF,EAASG,KAAKiF,SAC5C/E,aAAa8E,QAAQ,QAAQnF,EAASG,KAAKwE,OAC3CtE,aAAa8E,QAAQ,UAAUnF,EAASG,KAAKkF,SAC7ChF,aAAa8E,QAAQ,gBAAe,GACpCd,OAAOC,SAASC,YAGnB7D,OACG,SAAAC,GACIkC,EAAO,YAAYlC,EAAMX,SAASG,KAAKQ,MAAM2E,aAMvDI,EAAc,SAAC3D,GAEH,UAAVA,EAAE7B,KACFuF,KAIRlE,qBAAU,cAER,IAEF,IAAIsC,EAAW,GAiCjB,OA7BMA,EAFD2B,EAGK,gCACI,4CACA,wBAAO/D,MAAO,CAACC,MAAO,SAAtB,UACI,+BACI,uCACA,6BAAI,uBAAOE,KAAK,QAAQE,SAAU,SAAAC,GAAC,OAAE6C,EAAS7C,EAAEC,OAAOC,QAAQ0D,UAAW,SAAC5D,GAAD,OAAK2D,EAAc3D,WAEjG,+BACI,0CACA,6BAAI,uBAAOH,KAAK,WAAWE,SAAU,SAAAC,GAAC,OAAE+C,EAAY/C,EAAEC,OAAOC,QAAQ0D,UAAW,SAAC5D,GAAD,OAAK2D,EAAc3D,cAG3G,uBACA,qBAAKN,MAAO,CAACU,MAAM,MAAMR,WAAW,QAApC,SAA8CiB,IAC9C,uBACA,wBAAQnB,MAAO,CAACC,MAAO,SAAUQ,QAAS,kBAAIuD,KAA9C,mBACA,uBAAK,uBACL,wBAAQhE,MAAO,CAACC,MAAO,SAAUQ,QAAS,kBAAIwC,GAAiB,IAA/D,6BAMC,cAAC,EAAD,CAAYA,iBAAkBA,IAM3C,qBAAKlD,UAAU,MAAf,SAGKqC,KC5DM+B,EAzBL,WAER,MAA6BvG,oBAAS,GAAtC,mBAAOwG,EAAP,KAAgBC,EAAhB,KAYA,OATAvE,qBAAU,WAELlB,aAAaC,QAAQ,iBAAmD,IAAhCD,aAAaC,QAAQ,WACjC,IAA/BD,aAAaC,QAAQ,UACnBwF,GAAY,KAGd,IAGA,qBAAKtE,UAAU,MAAf,SAEKqE,EAAS,cAAC,EAAD,IAAY,cAAC,EAAD,OCXfE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlG,MAAK,YAAkD,IAA/CmG,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.7b74981d.chunk.js","sourcesContent":["\r\nimport '../../App.css';\r\nimport React,{useEffect,useState} from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nconst PriviousValue=()=> {\r\n\r\n\r\n    const [fetchedData,setFetchedData]=useState(['']);\r\n    const [start_datetime,setStart_datetime]=useState('2000-01-01 10:32:58');\r\n    const [end_datetime,setEnd_datetime]=useState('2050-12-12  10:32:58');\r\n\r\n\r\n    const getDataFromDB=()=>{\r\n        //fatching data for database\r\n        axios.get('https://ami-coding-pari-na-default-rtdb.asia-southeast1.firebasedatabase.app/Userdata.json')\r\n            .then(response =>{\r\n                //console.log(response.data, ' getDataFromDB');\r\n\r\n                const fetchedOrders = [];\r\n                for (let key in response.data) {\r\n                    if( response.data[key].user_id == localStorage.getItem('userID')){\r\n                        fetchedOrders.push({      \r\n                            ...response.data[key],\r\n                            \r\n                            id: key})\r\n                             //after fatching doing litle bit modifying and putting them in array \r\n                    }\r\n                }\r\n                //setFetchedData(fetchedOrders);\r\n                //console.log(fetchedOrders, ' fetchedOrders');\r\n\r\n                filterHandaler(fetchedOrders); \r\n\r\n                //after fatching that array is sedning to the filter Function \r\n\r\n            })\r\n            .catch(\r\n                error=>{\r\n                    console.log(error);\r\n            });\r\n    }\r\n\r\n\r\n    const filterHandaler=(fetchedOrder)=>{\r\n        \r\n        //filtering data according to user given Start Datetime and End Datetime\r\n        //defult time are 2000-01-01 10:32:58 and 2050-12-12  10:32:58\r\n\r\n        var dateStart = new Date(start_datetime);\r\n        var dateEnd = new Date(end_datetime);\r\n        const filterdValues = [];\r\n\r\n\r\n        fetchedOrder.map(d=>{\r\n            var date =  new Date(d.timestamp);\r\n\r\n            //console.log(dateStart<date, ' d');\r\n\r\n            if(date>=dateStart && date<=dateEnd){\r\n                filterdValues.push(d);\r\n                //filtering and pushing them in array\r\n            }\r\n        \r\n        })\r\n\r\n\r\n        setFetchedData(filterdValues); //storing filterd data in State\r\n    \r\n    \r\n    }\r\n\r\n    useEffect(()=>{\r\n        getDataFromDB();\r\n    },[])\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n        \r\n        <br/>\r\n        <h2>Previous Values (Section 3: API Endpoints)</h2>\r\n        <br/>\r\n        {fetchedData!=''?\r\n        //if fatchData state is not emply then it will show this part\r\n            <div>\r\n                <table  style={{width:'480px',fontWeight:'bold'}}>\r\n                    <tr>\r\n                        <td>Start Datetime</td>\r\n                        <td><input type='date' placeholder='start_datetime' onChange={e=>setStart_datetime(e.target.value)}/></td>\r\n\r\n                    </tr>\r\n                    <tr>\r\n                        <td>End Datetime</td>\r\n                        <td><input type='date' placeholder='end_datetime' onChange={e=>setEnd_datetime(e.target.value)}/></td>\r\n                    </tr>\r\n                </table>\r\n                <br/>\r\n                <button onClick={()=>getDataFromDB()} style={{width:'480px'}}>Filter</button>\r\n                <br/>\r\n                <br/>\r\n                <hr/>\r\n\r\n                <div style={{color:'blue'}}> [P.S. Without Filter table will show all previous input values of User(who logged in)]</div>\r\n                <br/>\r\n\r\n                <table>\r\n                    <tr>\r\n                        <th>Input Values</th>\r\n                        <th>Timestamp</th>\r\n                    </tr>\r\n                    {fetchedData.map(d=>{\r\n                        // printing data from state\r\n                    \r\n                        return(\r\n                            <tr key={d.id}>\r\n                                <td>{d.input_values}</td>\r\n                                <td>{d.timestamp}</td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </table>\r\n            </div>\r\n\r\n        :<h3>You donn't have any previous data! Please store something</h3>}\r\n        {/* otherwise it will show this part */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PriviousValue;\r\n","\r\nimport '../../App.css';\r\nimport React,{useEffect,useState} from 'react';\r\nimport axios from 'axios';\r\nimport moment from \"moment\";\r\nimport PriviousValues from './previousValues';\r\n\r\n\r\nconst HomePage=()=> {\r\n\r\n    const [inputValue,setInputValue]=useState('');\r\n    const [searchValue,setSearchValue]=useState('');\r\n    const [showSearchPage,setShowSearchPage]=useState(true);\r\n    const [msg,setMsg]=useState('');\r\n    const [result,setResult]=useState('');\r\n\r\n\r\n    const setDataToDB=(sortedData)=>{\r\n\r\n        \r\n\r\n\r\n        if(sortedData!=''){  //checking sortedData are emepty or not\r\n            // storing values in Database\r\n            axios.post('https://ami-coding-pari-na-default-rtdb.asia-southeast1.firebasedatabase.app/Userdata.json',{\r\n                input_values:sortedData.toString(),\r\n                timestamp:moment().format(\"YYYY-MM-DD hh:mm:ss\"),\r\n                user_id:localStorage.getItem('userID')\r\n            })\r\n            .then(response =>{\r\n                console.log(response.data, ' post');\r\n            })\r\n            .catch(\r\n                error=>{\r\n                    console.log(error);\r\n            });\r\n        }\r\n        else{ //if sorteddata are empty it will not store in DB\r\n            setMsg(\"Failed!! Please input atlast one number!!\");\r\n            setResult('');\r\n        }\r\n\r\n    }\r\n\r\n    const searchData=()=>{\r\n        //searching data from Input values\r\n        console.log(inputValue,' inputValue');\r\n        console.log(searchValue,' search');\r\n\r\n\r\n        if(inputValue!=''){\r\n            setMsg('Input Values stored in DB');\r\n            let splitInputValue= inputValue.split(/[a-zA-Z]+|[\\s., ]+/);\r\n            //removing things like Alphabet,space,comma etc from input values\r\n\r\n            const found = splitInputValue.find(v => v == searchValue);\r\n            //searching operation\r\n\r\n            found!=undefined?setResult('True'):setResult('False');\r\n\r\n            console.log(found,' found');\r\n\r\n            sortInputValue(splitInputValue); //sending data to sorting function to sort\r\n            \r\n        }\r\n        else{\r\n            setMsg(\"Failed!! Input Value text box is Empty!!\");\r\n            setResult('');\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const sortInputValue=(data)=>{\r\n\r\n    \r\n        let sortedData= data.sort((a,b) => b - a); //sorting data \r\n\r\n        setDataToDB(sortedData.join('').split('')); \r\n\r\n        //removng extra spaces again  sorting data sending to setDataToDB fucntion to store them in DB\r\n\r\n\r\n        console.log(sortedData, ' sortedData');\r\n    }\r\n\r\n\r\n    const logOut=()=>{\r\n        localStorage.clear(); \r\n        window.location.reload(); \r\n        \r\n    }\r\n\r\n    useEffect(()=>{\r\n        //localStorage.setItem('userID','01');\r\n        setMsg('');\r\n        setResult('');\r\n        console.log('useEffect');\r\n    },[])\r\n\r\n\r\n\r\n    let Instructions= ( \r\n            <div className=\"instructions\">\r\n                <h3>Instructions </h3>\r\n                <div>\r\n                    1. In Input Values user can input like 1, 2 or 1,2 or 1.2 or 1 2 etc.\r\n                    <br/>\r\n                    2.If you give Alphabet in input it will not store in DB.\r\n                    Such as: \r\n                        <br/>\r\n                        &nbsp;&nbsp; Input Given: 1, 2, A , 3  \r\n                        <br/>\r\n                        &nbsp;&nbsp; Will store in DB: 3,2,1\r\n                    <br/>\r\n                    3. In Privious Values page it will show by defult all privious input values of that user.\r\n                    <br/>\r\n                    4.User can filter by Start Datetime and End Datetime\r\n                    <br/>\r\n                    5.If user is not enterd any input values and Is not press on Khoj button there will be Emapty msg in Previous page\r\n                </div>\r\n            </div>\r\n    )\r\n\r\n\r\n    let pageData = '';\r\n\r\n    \r\n    if(showSearchPage){\r\n\r\n        // if press Search Page button it will show this part\r\n        pageData= <div>\r\n                    <h2>Khoj the search Page</h2>\r\n                    <table style={{fontWeight:'bold',width:'80%'}}>\r\n                        <tr>\r\n                            <td>Input values: </td>\r\n                            <td><input onChange={e=>setInputValue(e.target.value)}  value={inputValue}/> </td>\r\n                        \r\n                        </tr>\r\n                        <tr>\r\n                            <td>Search values: </td>\r\n                            <td><input onChange={e=>setSearchValue(e.target.value)} type='number' value={searchValue}/> </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td style={{color:'#9A00FF'}}>{msg} </td>\r\n                            <td><button onClick={()=>searchData()}>Khoj</button></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Result </td>\r\n                            <td style={{color:result=='False'?'red':'green',fontWeight:'bold'}}>{result}</td>\r\n                        </tr> \r\n                    </table>\r\n\r\n                    {Instructions}\r\n\r\n                </div>\r\n    }\r\n    else{\r\n         // Previous Values button it will show this part\r\n        pageData= <PriviousValues/>;\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            \r\n            <h2>Welcome {localStorage.getItem('email')}</h2>\r\n            <br/>\r\n\r\n            <button onClick={()=>setShowSearchPage(true)}>Search Page</button>\r\n            <button onClick={()=>setShowSearchPage(false)}>Previous Values</button>\r\n            <button onClick={()=>logOut()} style={{backgroundColor:'red',borderColor:'red'}}>LogOut</button>\r\n            \r\n            <br/>\r\n\r\n            {pageData}\r\n\r\n           \r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomePage;\r\n","\r\nimport '../../App.css';\r\nimport React,{useEffect,useState} from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nconst PriviousValue=({setShowLoginPage})=> {\r\n\r\n    const [email,setEmail]=useState('');\r\n    const [password,setPassword]=useState('');\r\n    const [reTypePassword,setReTypePassword]=useState('');\r\n    const [msg,setMsg]=useState('');\r\n    const signUpApi = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDaMLRpxmGQ6asNZYY0_m1Y8UMxKelLKcw';\r\n    //Api from Firebase for singUp\r\n   \r\n    const singup=()=>{\r\n\r\n        if(reTypePassword==password){\r\n            \r\n            setMsg('');\r\n            const authData ={\r\n                email: email,\r\n                password: password,\r\n                returnSecureToken:true\r\n                //sorting user input data in temp object\r\n            }\r\n        \r\n            axios.post(signUpApi,authData)\r\n                .then(response =>{\r\n                    setMsg('');\r\n                    console.log(response.data, ' post');\r\n                    localStorage.setItem('userID',response.data.localId);\r\n                    localStorage.setItem('email',response.data.email);\r\n                    localStorage.setItem('idToken',response.data.idToken);\r\n                    localStorage.setItem('userVerified',true);\r\n                    window.location.reload(); \r\n                    //sucessfully sign up storing data in local storage\r\n                })\r\n                .catch(\r\n                    error=>{\r\n                        console.log(error.response.data.error);\r\n                        setMsg('FAILED!! '+error.response.data.error.message);\r\n                        //if failed it will show this error msg from Firebase\r\n                });\r\n        }\r\n        else{\r\n            setMsg('Re-Type Password and Password are not match!');\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n        <h2>SignUp Page</h2>\r\n\r\n        <table style={{width: '600px'}}>\r\n            {/* user input form part */}\r\n            <tr>\r\n                <td>Email</td>\r\n                <td><input placeholder='exp@exemple.com' type=\"email\" onChange={e=>setEmail(e.target.value)}/></td>\r\n            </tr>\r\n            <tr>\r\n                <td>Password</td>\r\n                <td><input placeholder='at least 6 characters' type=\"password\" onChange={e=>setPassword(e.target.value)}/></td>\r\n            </tr>\r\n            <tr>\r\n                <td>Re-Type Password</td>\r\n                <td><input placeholder='at least 6 characters' type=\"password\" onChange={e=>setReTypePassword(e.target.value)}/></td>\r\n            </tr>\r\n        </table>\r\n        <br/>\r\n        <div style={{color:'red',fontWeight:'bold'}}>{msg}</div>\r\n        <br/>\r\n        <button style={{width: '600px'}} onClick={()=>singup()}>SignUp</button>\r\n        <br/><br/>\r\n        {/* \r\n        setShowLoginPage() function is from loginPage.js. If press on it will change \r\n        the value of  props.showLoginPage=true  then will will show login form part*/}\r\n        <button style={{width: '600px'}} onClick={()=>setShowLoginPage(true)}>Go to LogIn</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PriviousValue;\r\n","\r\nimport '../../App.css';\r\nimport React,{useEffect,useState} from 'react';\r\nimport axios from 'axios';\r\nimport SignUpPage from './signUpPage';\r\n\r\n\r\nconst PriviousValue=()=> {\r\n\r\n    const [email,setEmail]=useState('');\r\n    const [password,setPassword]=useState('');\r\n    const [showLoginPage,setShowLoginPage]=useState(true);\r\n    const authApi = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDaMLRpxmGQ6asNZYY0_m1Y8UMxKelLKcw';\r\n    //Api from Firebase for singIn\r\n    const [msg,setMsg]=useState('');\r\n\r\n   \r\n    const logIn=()=>{\r\n        const authData ={\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken:true\r\n        }\r\n\r\n        axios.post(authApi,authData)\r\n            .then(response =>{\r\n                setMsg('');\r\n                console.log(response.data, ' post');\r\n                localStorage.setItem('userID',response.data.localId);\r\n                localStorage.setItem('email',response.data.email);\r\n                localStorage.setItem('idToken',response.data.idToken);\r\n                localStorage.setItem('userVerified',true);\r\n                window.location.reload(); \r\n                //sucessfully sign in storing data in local storage and reloding the page\r\n            })\r\n            .catch(\r\n                error=>{\r\n                    setMsg('FAILED!! '+error.response.data.error.message);\r\n            });\r\n\r\n\r\n    }\r\n\r\n    const handleKeyDown=(e)=> {\r\n        //if user press Enter button will will also call login function\r\n        if (e.key === 'Enter') {\r\n            logIn();\r\n        }\r\n      }\r\n\r\n    useEffect(()=>{\r\n        \r\n    },[])\r\n\r\n    let pageData = '';\r\n\r\n    if(showLoginPage){\r\n   \r\n        pageData=(\r\n            <div>\r\n                <h2>LogIn Page</h2>\r\n                <table style={{width: '600px'}}>\r\n                    <tr>\r\n                        <td>Email</td>\r\n                        <td><input type=\"email\" onChange={e=>setEmail(e.target.value)} onKeyDown={(e)=>handleKeyDown(e)}/></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Password</td>\r\n                        <td><input type=\"password\" onChange={e=>setPassword(e.target.value)} onKeyDown={(e)=>handleKeyDown(e)}/></td>\r\n                    </tr>\r\n                </table>\r\n                <br/>\r\n                <div style={{color:'red',fontWeight:'bold'}}>{msg}</div>\r\n                <br/>\r\n                <button style={{width: '600px'}} onClick={()=>logIn()}>LogIn</button>\r\n                <br/><br/>\r\n                <button style={{width: '600px'}} onClick={()=>setShowLoginPage(false)}>Go to SignUp</button>\r\n            </div>\r\n        )\r\n    }\r\n    else{\r\n        //if press on Go to SignUp button the value of showLoginPage will become false and it will show this part\r\n        pageData=<SignUpPage setShowLoginPage={setShowLoginPage}/>\r\n    }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n     \r\n\r\n        {pageData}\r\n       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PriviousValue;\r\n","import React, {useEffect,useState} from 'react';\nimport './App.css';\nimport HomePage from './components/afterLogin/homePage';\nimport LoginPage from './components/beforeLogin/logInPage';\n\n\nconst App=()=> {\n\n  const [verified,setVerified]=useState(false);\n\n\n  useEffect(()=>{\n\n    if(localStorage.getItem('userVerified') && localStorage.getItem('userID')!='' && \n    localStorage.getItem('email')!=''){\n      setVerified(true);\n      //this condition is checking user in already login or not.\n    }\n  },[])\n\n  return (\n    <div className=\"App\">\n\n        {verified?<HomePage/>:<LoginPage/>}\n        {/* if user already login then it will take to the Homepage otherwise Login page */}\n\n       \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}